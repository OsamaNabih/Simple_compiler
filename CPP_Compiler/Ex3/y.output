Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | PRINT expr ';'
    7     | VARIABLE '=' expr ';'
    8     | dec_type VARIABLE '=' expr ';'
    9     | dec_type VARIABLE ';'
   10     | WHILE '(' expr ')' stmt
   11     | IF '(' expr ')' stmt
   12     | IF '(' expr ')' stmt ELSE stmt
   13     | '{' stmt_list '}'

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 expr: INTEGER
   17     | DOUBLE
   18     | CHAR
   19     | STRING
   20     | VARIABLE
   21     | '-' expr
   22     | expr '+' expr
   23     | expr '-' expr
   24     | expr '*' expr
   25     | expr '/' expr
   26     | expr '<' expr
   27     | expr '>' expr
   28     | expr GE expr
   29     | expr LE expr
   30     | expr NE expr
   31     | expr EQ expr
   32     | '(' expr ')'

   33 dec_type: INT_TYPE
   34         | DOUBLE_TYPE
   35         | CHAR_TYPE
   36         | STR_TYPE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 12 32
')' (41) 10 11 12 32
'*' (42) 24
'+' (43) 22
'-' (45) 21 23
'/' (47) 25
';' (59) 4 5 6 7 8 9
'<' (60) 26
'=' (61) 7 8
'>' (62) 27
'{' (123) 13
'}' (125) 13
error (256)
INTEGER (258) 16
DOUBLE (259) 17
VARIABLE (260) 7 8 9 20
CHAR (261) 18
STRING (262) 19
WHILE (263) 10
IF (264) 11 12
PRINT (265) 6
INT_TYPE (266) 33
DOUBLE_TYPE (267) 34
CHAR_TYPE (268) 35
STR_TYPE (269) 36
IFX (270)
ELSE (271) 12
GE (272) 28
LE (273) 29
EQ (274) 31
NE (275) 30
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
function (36)
    on left: 2 3, on right: 1 2
stmt (37)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 10 11 12 14 15
stmt_list (38)
    on left: 14 15, on right: 13 15
expr (39)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    5 6 7 8 10 11 12 21 22 23 24 25 26 27 28 29 30 31 32
dec_type (40)
    on left: 33 34 35 36, on right: 8 9


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19

    $default  reduce using rule 1 (program)

    stmt      go to state 20
    expr      go to state 21
    dec_type  go to state 22


State 3

    0 $accept: program $end .

    $default  accept


State 4

   16 expr: INTEGER .

    $default  reduce using rule 16 (expr)


State 5

   17 expr: DOUBLE .

    $default  reduce using rule 17 (expr)


State 6

    7 stmt: VARIABLE . '=' expr ';'
   20 expr: VARIABLE .

    '='  shift, and go to state 23

    $default  reduce using rule 20 (expr)


State 7

   18 expr: CHAR .

    $default  reduce using rule 18 (expr)


State 8

   19 expr: STRING .

    $default  reduce using rule 19 (expr)


State 9

   10 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 24


State 10

   11 stmt: IF . '(' expr ')' stmt
   12     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 25


State 11

    6 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 27


State 12

   33 dec_type: INT_TYPE .

    $default  reduce using rule 33 (dec_type)


State 13

   34 dec_type: DOUBLE_TYPE .

    $default  reduce using rule 34 (dec_type)


State 14

   35 dec_type: CHAR_TYPE .

    $default  reduce using rule 35 (dec_type)


State 15

   36 dec_type: STR_TYPE .

    $default  reduce using rule 36 (dec_type)


State 16

   21 expr: '-' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 28


State 17

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 18

   32 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 29


State 19

   13 stmt: '{' . stmt_list '}'

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19

    stmt       go to state 30
    stmt_list  go to state 31
    expr       go to state 21
    dec_type   go to state 22


State 20

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 21

    5 stmt: expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ';'  shift, and go to state 42


State 22

    8 stmt: dec_type . VARIABLE '=' expr ';'
    9     | dec_type . VARIABLE ';'

    VARIABLE  shift, and go to state 43


State 23

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 44


State 24

   10 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 45


State 25

   11 stmt: IF '(' . expr ')' stmt
   12     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 46


State 26

   20 expr: VARIABLE .

    $default  reduce using rule 20 (expr)


State 27

    6 stmt: PRINT expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ';'  shift, and go to state 47


State 28

   21 expr: '-' expr .
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 21 (expr)


State 29

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   32     | '(' expr . ')'

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ')'  shift, and go to state 48


State 30

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


State 31

   13 stmt: '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19
    '}'          shift, and go to state 49

    stmt      go to state 50
    expr      go to state 21
    dec_type  go to state 22


State 32

   28 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 51


State 33

   29 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 52


State 34

   31 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 53


State 35

   30 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 54


State 36

   27 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 55


State 37

   26 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 56


State 38

   22 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 57


State 39

   23 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 58


State 40

   24 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 59


State 41

   25 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 60


State 42

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 43

    8 stmt: dec_type VARIABLE . '=' expr ';'
    9     | dec_type VARIABLE . ';'

    ';'  shift, and go to state 61
    '='  shift, and go to state 62


State 44

    7 stmt: VARIABLE '=' expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ';'  shift, and go to state 63


State 45

   10 stmt: WHILE '(' expr . ')' stmt
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ')'  shift, and go to state 64


State 46

   11 stmt: IF '(' expr . ')' stmt
   12     | IF '(' expr . ')' stmt ELSE stmt
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ')'  shift, and go to state 65


State 47

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


State 48

   32 expr: '(' expr ')' .

    $default  reduce using rule 32 (expr)


State 49

   13 stmt: '{' stmt_list '}' .

    $default  reduce using rule 13 (stmt)


State 50

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


State 51

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   28     | expr GE expr .
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 28 (expr)


State 52

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   29     | expr LE expr .
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 29 (expr)


State 53

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   31     | expr EQ expr .

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 31 (expr)


State 54

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   30     | expr NE expr .
   31     | expr . EQ expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 30 (expr)


State 55

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   27     | expr '>' expr .
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 27 (expr)


State 56

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   26     | expr '<' expr .
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 26 (expr)


State 57

   22 expr: expr . '+' expr
   22     | expr '+' expr .
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 22 (expr)


State 58

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   23     | expr '-' expr .
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 23 (expr)


State 59

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   24     | expr '*' expr .
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 24 (expr)


State 60

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   25     | expr '/' expr .
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 25 (expr)


State 61

    9 stmt: dec_type VARIABLE ';' .

    $default  reduce using rule 9 (stmt)


State 62

    8 stmt: dec_type VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VARIABLE  shift, and go to state 26
    CHAR      shift, and go to state 7
    STRING    shift, and go to state 8
    '-'       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 66


State 63

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 64

   10 stmt: WHILE '(' expr ')' . stmt

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19

    stmt      go to state 67
    expr      go to state 21
    dec_type  go to state 22


State 65

   11 stmt: IF '(' expr ')' . stmt
   12     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19

    stmt      go to state 68
    expr      go to state 21
    dec_type  go to state 22


State 66

    8 stmt: dec_type VARIABLE '=' expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ';'  shift, and go to state 69


State 67

   10 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 10 (stmt)


State 68

   11 stmt: IF '(' expr ')' stmt .
   12     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 70

    $default  reduce using rule 11 (stmt)


State 69

    8 stmt: dec_type VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


State 70

   12 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER      shift, and go to state 4
    DOUBLE       shift, and go to state 5
    VARIABLE     shift, and go to state 6
    CHAR         shift, and go to state 7
    STRING       shift, and go to state 8
    WHILE        shift, and go to state 9
    IF           shift, and go to state 10
    PRINT        shift, and go to state 11
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    CHAR_TYPE    shift, and go to state 14
    STR_TYPE     shift, and go to state 15
    '-'          shift, and go to state 16
    ';'          shift, and go to state 17
    '('          shift, and go to state 18
    '{'          shift, and go to state 19

    stmt      go to state 71
    expr      go to state 21
    dec_type  go to state 22


State 71

   12 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 12 (stmt)

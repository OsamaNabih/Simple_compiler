Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | PRINT expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | SWITCH '(' expr ')' '{' case_stmt_list '}'
   12     | '{' stmt_list '}'

   13 stmt_list: stmt
   14          | stmt_list stmt

   15 case_stmt: CASE '(' expr ')' ':' stmt_list
   16          | DEFAULT ':' stmt_list

   17 case_stmt_list: case_stmt
   18               | case_stmt case_stmt_list

   19 expr: INTEGER
   20     | VARIABLE
   21     | '-' expr
   22     | expr '+' expr
   23     | expr '-' expr
   24     | expr '*' expr
   25     | expr '/' expr
   26     | expr '<' expr
   27     | expr '>' expr
   28     | expr GE expr
   29     | expr LE expr
   30     | expr NE expr
   31     | expr EQ expr
   32     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 11 15 32
')' (41) 8 9 10 11 15 32
'*' (42) 24
'+' (43) 22
'-' (45) 21 23
'/' (47) 25
':' (58) 15 16
';' (59) 4 5 6 7
'<' (60) 26
'=' (61) 7
'>' (62) 27
'{' (123) 11 12
'}' (125) 11 12
error (256)
INTEGER (258) 19
VARIABLE (259) 7 20
WHILE (260) 8
IF (261) 9 10
PRINT (262) 6
SWITCH (263) 11
CASE (264) 15
DEFAULT (265) 16
IFX (266)
ELSE (267) 10
GE (268) 28
LE (269) 29
EQ (270) 31
NE (271) 30
UMINUS (272)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
function (33)
    on left: 2 3, on right: 1 2
stmt (34)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 8 9 10 13 14
stmt_list (35)
    on left: 13 14, on right: 12 14 15 16
case_stmt (36)
    on left: 15 16, on right: 17 18
case_stmt_list (37)
    on left: 17 18, on right: 11 18
expr (38)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right: 5
    6 7 8 9 10 11 15 21 22 23 24 25 26 27 28 29 30 31 32


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    $default  reduce using rule 1 (program)

    stmt  go to state 14
    expr  go to state 15


State 3

    0 $accept: program $end .

    $default  accept


State 4

   19 expr: INTEGER .

    $default  reduce using rule 19 (expr)


State 5

    7 stmt: VARIABLE . '=' expr ';'
   20 expr: VARIABLE .

    '='  shift, and go to state 16

    $default  reduce using rule 20 (expr)


State 6

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 17


State 7

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 18


State 8

    6 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 20


State 9

   11 stmt: SWITCH . '(' expr ')' '{' case_stmt_list '}'

    '('  shift, and go to state 21


State 10

   21 expr: '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 22


State 11

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 12

   32 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 23


State 13

   12 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt       go to state 24
    stmt_list  go to state 25
    expr       go to state 15


State 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 15

    5 stmt: expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 36


State 16

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 37


State 17

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 38


State 18

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 39


State 19

   20 expr: VARIABLE .

    $default  reduce using rule 20 (expr)


State 20

    6 stmt: PRINT expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 40


State 21

   11 stmt: SWITCH '(' . expr ')' '{' case_stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 41


State 22

   21 expr: '-' expr .
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 21 (expr)


State 23

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   32     | '(' expr . ')'

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 42


State 24

   13 stmt_list: stmt .

    $default  reduce using rule 13 (stmt_list)


State 25

   12 stmt: '{' stmt_list . '}'
   14 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13
    '}'       shift, and go to state 43

    stmt  go to state 44
    expr  go to state 15


State 26

   28 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 45


State 27

   29 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 46


State 28

   31 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 47


State 29

   30 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 48


State 30

   27 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 49


State 31

   26 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 50


State 32

   22 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 51


State 33

   23 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 52


State 34

   24 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 53


State 35

   25 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 54


State 36

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 37

    7 stmt: VARIABLE '=' expr . ';'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 55


State 38

    8 stmt: WHILE '(' expr . ')' stmt
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 56


State 39

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 57


State 40

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


State 41

   11 stmt: SWITCH '(' expr . ')' '{' case_stmt_list '}'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 58


State 42

   32 expr: '(' expr ')' .

    $default  reduce using rule 32 (expr)


State 43

   12 stmt: '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 44

   14 stmt_list: stmt_list stmt .

    $default  reduce using rule 14 (stmt_list)


State 45

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   28     | expr GE expr .
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 28 (expr)


State 46

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   29     | expr LE expr .
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 29 (expr)


State 47

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   31     | expr EQ expr .

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 31 (expr)


State 48

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   30     | expr NE expr .
   31     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 30 (expr)


State 49

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   27     | expr '>' expr .
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 27 (expr)


State 50

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   26     | expr '<' expr .
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 26 (expr)


State 51

   22 expr: expr . '+' expr
   22     | expr '+' expr .
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 22 (expr)


State 52

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   23     | expr '-' expr .
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 23 (expr)


State 53

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   24     | expr '*' expr .
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 24 (expr)


State 54

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   25     | expr '/' expr .
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    $default  reduce using rule 25 (expr)


State 55

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 56

    8 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 59
    expr  go to state 15


State 57

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 60
    expr  go to state 15


State 58

   11 stmt: SWITCH '(' expr ')' . '{' case_stmt_list '}'

    '{'  shift, and go to state 61


State 59

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 60

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 62

    $default  reduce using rule 9 (stmt)


State 61

   11 stmt: SWITCH '(' expr ')' '{' . case_stmt_list '}'

    CASE     shift, and go to state 63
    DEFAULT  shift, and go to state 64

    case_stmt       go to state 65
    case_stmt_list  go to state 66


State 62

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 67
    expr  go to state 15


State 63

   15 case_stmt: CASE . '(' expr ')' ':' stmt_list

    '('  shift, and go to state 68


State 64

   16 case_stmt: DEFAULT . ':' stmt_list

    ':'  shift, and go to state 69


State 65

   17 case_stmt_list: case_stmt .
   18               | case_stmt . case_stmt_list

    CASE     shift, and go to state 63
    DEFAULT  shift, and go to state 64

    $default  reduce using rule 17 (case_stmt_list)

    case_stmt       go to state 65
    case_stmt_list  go to state 70


State 66

   11 stmt: SWITCH '(' expr ')' '{' case_stmt_list . '}'

    '}'  shift, and go to state 71


State 67

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 68

   15 case_stmt: CASE '(' . expr ')' ':' stmt_list

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 72


State 69

   16 case_stmt: DEFAULT ':' . stmt_list

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt       go to state 24
    stmt_list  go to state 73
    expr       go to state 15


State 70

   18 case_stmt_list: case_stmt case_stmt_list .

    $default  reduce using rule 18 (case_stmt_list)


State 71

   11 stmt: SWITCH '(' expr ')' '{' case_stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 72

   15 case_stmt: CASE '(' expr . ')' ':' stmt_list
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 74


State 73

   14 stmt_list: stmt_list . stmt
   16 case_stmt: DEFAULT ':' stmt_list .

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    $default  reduce using rule 16 (case_stmt)

    stmt  go to state 44
    expr  go to state 15


State 74

   15 case_stmt: CASE '(' expr ')' . ':' stmt_list

    ':'  shift, and go to state 75


State 75

   15 case_stmt: CASE '(' expr ')' ':' . stmt_list

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt       go to state 24
    stmt_list  go to state 76
    expr       go to state 15


State 76

   14 stmt_list: stmt_list . stmt
   15 case_stmt: CASE '(' expr ')' ':' stmt_list .

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    SWITCH    shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    $default  reduce using rule 15 (case_stmt)

    stmt  go to state 44
    expr  go to state 15
